{"ast":null,"code":"import * as __NgCli_bootstrap_1 from \"@angular/platform-browser\";\nimport { enableProdMode, NgZone } from '@angular/core';\nimport { singleSpaAngular } from 'single-spa-angular';\nimport { AppModule } from './app/app.module';\nimport { environment } from './app/environments/environment';\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\nif (environment.production) {\n  enableProdMode();\n}\nconst lifecycles = singleSpaAngular({\n  bootstrapFunction: singleSpaProps => {\n    singleSpaPropsSubject.next(singleSpaProps);\n    return __NgCli_bootstrap_1.platformBrowser().bootstrapModule(AppModule);\n  },\n  template: '<app-root />',\n  NgZone\n});\nexport const bootstrap = lifecycles.bootstrap;\nexport const mount = lifecycles.mount;\nexport const unmount = lifecycles.unmount;","map":{"version":3,"names":["enableProdMode","NgZone","singleSpaAngular","AppModule","environment","singleSpaPropsSubject","production","lifecycles","bootstrapFunction","singleSpaProps","next","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","template","bootstrap","mount","unmount"],"sources":["C:\\Users\\maxpo\\Desktop\\micro-frontEnd\\mf-users\\users\\src\\main.single-spa.ts"],"sourcesContent":["\r\nimport { enableProdMode, NgZone } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { singleSpaAngular } from 'single-spa-angular';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './app/environments/environment';\r\nimport { singleSpaPropsSubject } from './single-spa/single-spa-props';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nconst lifecycles = singleSpaAngular({\r\n  bootstrapFunction: singleSpaProps => {\r\n    singleSpaPropsSubject.next(singleSpaProps);\r\n    return platformBrowserDynamic().bootstrapModule(AppModule);\r\n  },\r\n  template: '<app-root />',\r\n  NgZone,\r\n});\r\n\r\nexport const bootstrap = lifecycles.bootstrap;\r\nexport const mount = lifecycles.mount;\r\nexport const unmount = lifecycles.unmount;\r\n"],"mappings":";AACA,SAASA,cAAc,EAAEC,MAAM,QAAQ,eAAe;AAGtD,SAASC,gBAAgB,QAAQ,oBAAoB;AAErD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,qBAAqB,QAAQ,+BAA+B;AAErE,IAAID,WAAW,CAACE,UAAU,EAAE;EAC1BN,cAAc,EAAE;AAClB;AAEA,MAAMO,UAAU,GAAGL,gBAAgB,CAAC;EAClCM,iBAAiB,EAAEC,cAAc,IAAG;IAClCJ,qBAAqB,CAACK,IAAI,CAACD,cAAc,CAAC;IAC1C,OAAOE,mBAAA,CAAAC,eAAA,EAAwB,CAACC,eAAe,CAACV,SAAS,CAAC;EAC5D,CAAC;EACDW,QAAQ,EAAE,cAAc;EACxBb;CACD,CAAC;AAEF,OAAO,MAAMc,SAAS,GAAGR,UAAU,CAACQ,SAAS;AAC7C,OAAO,MAAMC,KAAK,GAAGT,UAAU,CAACS,KAAK;AACrC,OAAO,MAAMC,OAAO,GAAGV,UAAU,CAACU,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}